
1) Create a PL/SQL procedure named cus_credit_update that takes a single input parameter: v_customer_id (the unique identifier of a customer).
The procedure should update the customer's credit limit based on the total number of orders they have placed, according to the following rules:
	i) 5 or more orders: Increase the customer's credit limit by 20%.
	ii) Between 2 and 4 orders (inclusive): Increase the customer's credit limit by 10%.
	iii) Exactly 1 order: Increase the customer's credit limit by 5%.
	iv) 0 orders: Do not change the customer's existing credit limit. 
In this case, raise a user-defined exception with the message "<Customer Name> never made an order so no credit limit update." 
After a successful credit limit update, the procedure should display a message in the format: "<Customer Name> is updated with a credit limit of $<500>".


2) Develop a PL/SQL procedure that takes a year (v_year IN) as an input parameter and determines the percentage of canceled orders for that year. The procedure should follow these rules:
Procedure Logic:
	i) Calculate the percentage of canceled orders within the given year 

	ii) If orders exist but none were canceled, display: "No orders were canceled."

	iii) If no orders exist for the given year, handle the exception and display: "No orders found for the year."

	iv) If canceled orders exist, display the result as: "Order cancellation status is 7%."

3) Develop a PL/SQL function named get_business_contact that takes a single input parameter: customer_id (the unique identifier of a customer).

The function should:
	i) Retrieve the first name and last name of the business contact person associated with the given customer_id.
	ii) Concatenate these names into a single string following a specific format: first_name last_name
	iii) Assume there is a title associated with the contact person (e.g., 'Mr.', 'Ms.', 'Mrs.'). example "Mr/Mrs. Nancy Jones"
	For example, if the title is 'Mr.', the first name is 'FLOR', and the last name is 'STONE', the function should return the string "Mr. FLOR STONE".
	The function should then return this formatted string containing the customer's business contact person's full name with the title  in capital letter.

4) Write a PL/SQL program (specifically a function called warehouse_stock) that, when you give it a product's unique ID, will tell you where that product is stored and how many are currently in stock. The function should return this information as a single piece of text, like 'San Francisco-255', where 'San Francisco' is the warehouse name and '255' is the number of that product in stock there. 

