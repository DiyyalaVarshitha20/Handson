1) Create a PL/SQL procedure to perform the following actions:
Update Manager: Update the manager in the Employees table to reflect their new role as senior manager, if manager id is listed in departments Table.
Update Job ID: Update manager's  job_id in the employees table by prefixing it with "Sr." to indicate the senior manager position.

System Requirement : Use the Basic loop with cursor to handle the departments tables records.


2) Write the procedure that get department_id, percentage of increment as parameter and perform of salary update to the particular department
and print the number of record update for deparmant_name
System Requirement :
	Procedure name as SALUPDATE(V_dept as number, v_increment as number)
	If department_id is not found handle the error by "Sorry...NO SUCH DEPARTMENT ID FOUND". If any miss match error handle error and handle other error by display "Error Occured..."
	
Output: 
	Number of Record update in Human Resources department is 5

Answer

CREATE OR REPLACE PROCEDURE PROCEMOCK2(V_DEPT IN NUMBER,V_INC IN NUMBER ) AS
v_deptname varchar2(70);
v_count number:=0;
BEGIN

select department_name into v_deptname from departments where department_id=v_dept;
 update mgr set salary=salary+v_inc where department_id=v_dept;
 v_count:=SQL%rowcount;
 if v_count>0 then
  dbms_output.put_line('Number of records updated in ' || v_deptname || ' department is ' || v_count);
  else
  dbms_output.put_line('Sorry...NO SUCH DEPARTMENT ID FOUND');
  end if;
EXCEPTION
WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('Sorry...NO SUCH DEPARTMENT ID FOUND');
  WHEN VALUE_ERROR THEN
    DBMS_OUTPUT.PUT_LINE('Data type mismatch error occurred');
  /*WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error Occurred... ');*/
END PROCEMOCK2;

3) Create a PL/SQL function to perform the following actions:

	Calculate Average Salary: Return the average salary of a specified department including the commission_pct .
	Return Type: Ensure the function returns the average salary as an integer value.


CREATE OR REPLACE FUNCTION MOCK3FUNC(DEPTID IN NUMBER)RETURN NUMBER AS
v_avg number;
BEGIN
  select floor(AVG(salary + (salary * NVL(commission_pct,0)))) INTO v_avg from employees where department_id=deptid;
  return v_avg;
END MOCK3FUNC;


*********************************************************SQL Query********************************************************************

1) Write an SQL query to display the following details for employees: employee_id, first_name, job_id, and bonus. The bonus should be determined based on the employee's experience in months as follows:
	If the employee's experience is more than 250 months, display "25% Bonus".
	If the employee's experience is between 230 and 250 months, display "22% Bonus".
	If the employee's experience is between 200 and 229 months, display "20% Bonus".
	If the employee's experience is less than 200 months, display "15% Bonus".


select employee_id,first_name,job_id,
case
    when months_between(sysdate,hire_date)>250 then '25% bonus'
    when months_between(sysdate,hire_date) between 230 and 250  then '22% bonus'
    when months_between(sysdate,hire_date) between 200 and 229 then '20% bonus'
    when months_between(sysdate,hire_date)<200 then '15% bonus'
end as bonus
from employees;


2) Write an SQL query to display the following details for employees: employee_id, first_name, date_of_joining (formatted as 'Dayname date Month year', e.g., 'Tuesday 17 June 2003'), and a greeting message titled Greet_MSG with the text "HAPPY WORK ANNIVERSARY". Only include employees whose date of joining falls within the current month.


select employee_id,first_name,to_char(hire_date, 'Day DD Month YYYY') AS date_of_joining,
'HAPPY WORK ANNIVERSARY' AS Greet_MSG from employees
where to_char(hire_date,'mm') = to_char(sysdate,'mm') and to_char(hire_date,'yyyy')=to_char(sysdate,'yyyy');



3) Write an SQL query to display the following details for employees with the job_id 'IT_PROG' who are assigned to an onsite project:
	Project Details for IT Programmers:
		Start Date: 24-02-2025
		Duration: 30 days
	Project Details for IT Manager:
		Start Date: 21-02-2025
		Duration: 35 days
Display the following columns: employee_id, first_name, start_date, and end_date of the project.